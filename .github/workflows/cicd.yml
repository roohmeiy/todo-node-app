name: Deploy Node App

on:
  workflow_dispatch:

env:
  IMAGE_NAME: todo-node-app

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
    
    - name: SonarQube Scanner
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: -Dsonar.projectKey=todo-node-app -Dsonar.projectName=todo-node-app

    - name: SonarQube Quality Gate
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  security-scan:
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'todo-node-app'
        path: '.'
        format: 'XML'
    
    - name: Upload Dependency Check Report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports/

  build-and-push:
    runs-on: ubuntu-latest
    needs: [code-quality, security-scan]
    outputs:
      image-tag: ${{ github.sha }}
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:latest
          ${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        platforms: linux/amd64
      env:
        DOCKER_BUILDKIT: 1

  image-security:
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Trivy Security Scan
      run: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
        aquasec/trivy image --format table --exit-code 1 \
        ${{ secrets.DOCKEHUB_USER }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image-tag }}

  deploy:
    runs-on: self-hosted
    needs: [build-and-push, image-security]
    
    steps:
    - name: Pull and run Docker container
      run: |
        docker pull ${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image-tag }}
        docker rm -f node_container || true
        docker run -d --name node_container -p 8000:8000 \
        ${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image-tag }}
        